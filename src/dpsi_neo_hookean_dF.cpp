#include <dpsi_neo_hookean_dF.h>
#include <iostream>

// Input:
//   F - the dense 3x3 deformation gradient
//   C,D - material parameters for the Neo-Hookean model
// Output:
//   psi - the 9x1 gradient of the potential energy wrt to the deformation gradient
/* double std::cbrt(std::pow(double a, int b)
{
    return std::cbrt(std::pow(a, b));
} */
void dpsi_neo_hookean_dF(Eigen::Vector9d &dw, Eigen::Ref<const Eigen::Matrix3d> F, double C, double D)
{
    double mu = C * 2;
    double lambda = D * 2;
    dw.setZero();
    double F1_1, F1_2, F1_3, F2_1, F2_2, F2_3, F3_1, F3_2, F3_3;
    F1_1 = F(0, 0);
    F1_2 = F(0, 1);
    F1_3 = F(0, 2);
    F2_1 = F(1, 0);
    F2_2 = F(1, 1);
    F2_3 = F(1, 2);
    F3_1 = F(2, 0);
    F3_2 = F(2, 1);
    F3_3 = F(2, 2);
    // stable-neo
    dw[0] = F1_1 * mu - lambda * (F2_2 * F3_3 - F2_3 * F3_2) * (mu / lambda - F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0);
    dw[1] = F1_2 * mu + lambda * (F2_1 * F3_3 - F2_3 * F3_1) * (mu / lambda - F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0);
    dw[2] = F1_3 * mu - lambda * (F2_1 * F3_2 - F2_2 * F3_1) * (mu / lambda - F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0);
    dw[3] = F2_1 * mu + lambda * (F1_2 * F3_3 - F1_3 * F3_2) * (mu / lambda - F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0);
    dw[4] = F2_2 * mu - lambda * (F1_1 * F3_3 - F1_3 * F3_1) * (mu / lambda - F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0);
    dw[5] = F2_3 * mu + lambda * (F1_1 * F3_2 - F1_2 * F3_1) * (mu / lambda - F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0);
    dw[6] = F3_1 * mu - lambda * (F1_2 * F2_3 - F1_3 * F2_2) * (mu / lambda - F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0);
    dw[7] = F3_2 * mu + lambda * (F1_1 * F2_3 - F1_3 * F2_1) * (mu / lambda - F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0);
    dw[8] = F3_3 * mu - lambda * (F1_1 * F2_2 - F1_2 * F2_1) * (mu / lambda - F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0);
    /*     psi(0) = C * (F(0, 0) * 1.0 / std::cbrt(std::pow(F(0, 0) * F(1, 1) * F(2, 2) - F(0, 0) * F(1, 2) * F(2, 1) - F(0, 1) * F(1, 0) * F(2, 2) + F(0, 1) * F(1, 2) * F(2, 0) + F(0, 2) * F(1, 0) * F(2, 1) - F(0, 2) * F(1, 1) * F(2, 0), 2)) * 2.0 - (F(1, 1) * F(2, 2) - F(1, 2) * F(2, 1)) * 1.0 / std::cbrt(std::pow(F(0, 0) * F(1, 1) * F(2, 2) - F(0, 0) * F(1, 2) * F(2, 1) - F(0, 1) * F(1, 0) * F(2, 2) + F(0, 1) * F(1, 2) * F(2, 0) + F(0, 2) * F(1, 0) * F(2, 1) - F(0, 2) * F(1, 1) * F(2, 0), 5)) * (F(0, 0) * F(0, 0) + F(0, 1) * F(0, 1) + F(0, 2) * F(0, 2) + F(1, 0) * F(1, 0) + F(1, 1) * F(1, 1) + F(1, 2) * F(1, 2) + F(2, 0) * F(2, 0) + F(2, 1) * F(2, 1) + F(2, 2) * F(2, 2)) * (2.0 / 3.0)) - D * (F(1, 1) * F(2, 2) - F(1, 2) * F(2, 1)) * (-F(0, 0) * F(1, 1) * F(2, 2) + F(0, 0) * F(1, 2) * F(2, 1) + F(0, 1) * F(1, 0) * F(2, 2) - F(0, 1) * F(1, 2) * F(2, 0) - F(0, 2) * F(1, 0) * F(2, 1) + F(0, 2) * F(1, 1) * F(2, 0) + 1.0) * 2.0;
        psi(1) = C * (F(1, 0) * 1.0 / std::cbrt(std::pow(F(0, 0) * F(1, 1) * F(2, 2) - F(0, 0) * F(1, 2) * F(2, 1) - F(0, 1) * F(1, 0) * F(2, 2) + F(0, 1) * F(1, 2) * F(2, 0) + F(0, 2) * F(1, 0) * F(2, 1) - F(0, 2) * F(1, 1) * F(2, 0), 2)) * 2.0 + (F(0, 1) * F(2, 2) - F(0, 2) * F(2, 1)) * 1.0 / std::cbrt(std::pow(F(0, 0) * F(1, 1) * F(2, 2) - F(0, 0) * F(1, 2) * F(2, 1) - F(0, 1) * F(1, 0) * F(2, 2) + F(0, 1) * F(1, 2) * F(2, 0) + F(0, 2) * F(1, 0) * F(2, 1) - F(0, 2) * F(1, 1) * F(2, 0), 5)) * (F(0, 0) * F(0, 0) + F(0, 1) * F(0, 1) + F(0, 2) * F(0, 2) + F(1, 0) * F(1, 0) + F(1, 1) * F(1, 1) + F(1, 2) * F(1, 2) + F(2, 0) * F(2, 0) + F(2, 1) * F(2, 1) + F(2, 2) * F(2, 2)) * (2.0 / 3.0)) + D * (F(0, 1) * F(2, 2) - F(0, 2) * F(2, 1)) * (-F(0, 0) * F(1, 1) * F(2, 2) + F(0, 0) * F(1, 2) * F(2, 1) + F(0, 1) * F(1, 0) * F(2, 2) - F(0, 1) * F(1, 2) * F(2, 0) - F(0, 2) * F(1, 0) * F(2, 1) + F(0, 2) * F(1, 1) * F(2, 0) + 1.0) * 2.0;
        psi(2) = C * (F(2, 0) * 1.0 / std::cbrt(std::pow(F(0, 0) * F(1, 1) * F(2, 2) - F(0, 0) * F(1, 2) * F(2, 1) - F(0, 1) * F(1, 0) * F(2, 2) + F(0, 1) * F(1, 2) * F(2, 0) + F(0, 2) * F(1, 0) * F(2, 1) - F(0, 2) * F(1, 1) * F(2, 0), 2)) * 2.0 - (F(0, 1) * F(1, 2) - F(0, 2) * F(1, 1)) * 1.0 / std::cbrt(std::pow(F(0, 0) * F(1, 1) * F(2, 2) - F(0, 0) * F(1, 2) * F(2, 1) - F(0, 1) * F(1, 0) * F(2, 2) + F(0, 1) * F(1, 2) * F(2, 0) + F(0, 2) * F(1, 0) * F(2, 1) - F(0, 2) * F(1, 1) * F(2, 0), 5)) * (F(0, 0) * F(0, 0) + F(0, 1) * F(0, 1) + F(0, 2) * F(0, 2) + F(1, 0) * F(1, 0) + F(1, 1) * F(1, 1) + F(1, 2) * F(1, 2) + F(2, 0) * F(2, 0) + F(2, 1) * F(2, 1) + F(2, 2) * F(2, 2)) * (2.0 / 3.0)) - D * (F(0, 1) * F(1, 2) - F(0, 2) * F(1, 1)) * (-F(0, 0) * F(1, 1) * F(2, 2) + F(0, 0) * F(1, 2) * F(2, 1) + F(0, 1) * F(1, 0) * F(2, 2) - F(0, 1) * F(1, 2) * F(2, 0) - F(0, 2) * F(1, 0) * F(2, 1) + F(0, 2) * F(1, 1) * F(2, 0) + 1.0) * 2.0;
        psi(3) = C * (F(0, 1) * 1.0 / std::cbrt(std::pow(F(0, 0) * F(1, 1) * F(2, 2) - F(0, 0) * F(1, 2) * F(2, 1) - F(0, 1) * F(1, 0) * F(2, 2) + F(0, 1) * F(1, 2) * F(2, 0) + F(0, 2) * F(1, 0) * F(2, 1) - F(0, 2) * F(1, 1) * F(2, 0), 2)) * 2.0 + (F(1, 0) * F(2, 2) - F(1, 2) * F(2, 0)) * 1.0 / std::cbrt(std::pow(F(0, 0) * F(1, 1) * F(2, 2) - F(0, 0) * F(1, 2) * F(2, 1) - F(0, 1) * F(1, 0) * F(2, 2) + F(0, 1) * F(1, 2) * F(2, 0) + F(0, 2) * F(1, 0) * F(2, 1) - F(0, 2) * F(1, 1) * F(2, 0), 5)) * (F(0, 0) * F(0, 0) + F(0, 1) * F(0, 1) + F(0, 2) * F(0, 2) + F(1, 0) * F(1, 0) + F(1, 1) * F(1, 1) + F(1, 2) * F(1, 2) + F(2, 0) * F(2, 0) + F(2, 1) * F(2, 1) + F(2, 2) * F(2, 2)) * (2.0 / 3.0)) + D * (F(1, 0) * F(2, 2) - F(1, 2) * F(2, 0)) * (-F(0, 0) * F(1, 1) * F(2, 2) + F(0, 0) * F(1, 2) * F(2, 1) + F(0, 1) * F(1, 0) * F(2, 2) - F(0, 1) * F(1, 2) * F(2, 0) - F(0, 2) * F(1, 0) * F(2, 1) + F(0, 2) * F(1, 1) * F(2, 0) + 1.0) * 2.0;
        psi(4) = C * (F(1, 1) * 1.0 / std::cbrt(std::pow(F(0, 0) * F(1, 1) * F(2, 2) - F(0, 0) * F(1, 2) * F(2, 1) - F(0, 1) * F(1, 0) * F(2, 2) + F(0, 1) * F(1, 2) * F(2, 0) + F(0, 2) * F(1, 0) * F(2, 1) - F(0, 2) * F(1, 1) * F(2, 0), 2)) * 2.0 - (F(0, 0) * F(2, 2) - F(0, 2) * F(2, 0)) * 1.0 / std::cbrt(std::pow(F(0, 0) * F(1, 1) * F(2, 2) - F(0, 0) * F(1, 2) * F(2, 1) - F(0, 1) * F(1, 0) * F(2, 2) + F(0, 1) * F(1, 2) * F(2, 0) + F(0, 2) * F(1, 0) * F(2, 1) - F(0, 2) * F(1, 1) * F(2, 0), 5)) * (F(0, 0) * F(0, 0) + F(0, 1) * F(0, 1) + F(0, 2) * F(0, 2) + F(1, 0) * F(1, 0) + F(1, 1) * F(1, 1) + F(1, 2) * F(1, 2) + F(2, 0) * F(2, 0) + F(2, 1) * F(2, 1) + F(2, 2) * F(2, 2)) * (2.0 / 3.0)) - D * (F(0, 0) * F(2, 2) - F(0, 2) * F(2, 0)) * (-F(0, 0) * F(1, 1) * F(2, 2) + F(0, 0) * F(1, 2) * F(2, 1) + F(0, 1) * F(1, 0) * F(2, 2) - F(0, 1) * F(1, 2) * F(2, 0) - F(0, 2) * F(1, 0) * F(2, 1) + F(0, 2) * F(1, 1) * F(2, 0) + 1.0) * 2.0;
        psi(5) = C * (F(2, 1) * 1.0 / std::cbrt(std::pow(F(0, 0) * F(1, 1) * F(2, 2) - F(0, 0) * F(1, 2) * F(2, 1) - F(0, 1) * F(1, 0) * F(2, 2) + F(0, 1) * F(1, 2) * F(2, 0) + F(0, 2) * F(1, 0) * F(2, 1) - F(0, 2) * F(1, 1) * F(2, 0), 2)) * 2.0 + (F(0, 0) * F(1, 2) - F(0, 2) * F(1, 0)) * 1.0 / std::cbrt(std::pow(F(0, 0) * F(1, 1) * F(2, 2) - F(0, 0) * F(1, 2) * F(2, 1) - F(0, 1) * F(1, 0) * F(2, 2) + F(0, 1) * F(1, 2) * F(2, 0) + F(0, 2) * F(1, 0) * F(2, 1) - F(0, 2) * F(1, 1) * F(2, 0), 5)) * (F(0, 0) * F(0, 0) + F(0, 1) * F(0, 1) + F(0, 2) * F(0, 2) + F(1, 0) * F(1, 0) + F(1, 1) * F(1, 1) + F(1, 2) * F(1, 2) + F(2, 0) * F(2, 0) + F(2, 1) * F(2, 1) + F(2, 2) * F(2, 2)) * (2.0 / 3.0)) + D * (F(0, 0) * F(1, 2) - F(0, 2) * F(1, 0)) * (-F(0, 0) * F(1, 1) * F(2, 2) + F(0, 0) * F(1, 2) * F(2, 1) + F(0, 1) * F(1, 0) * F(2, 2) - F(0, 1) * F(1, 2) * F(2, 0) - F(0, 2) * F(1, 0) * F(2, 1) + F(0, 2) * F(1, 1) * F(2, 0) + 1.0) * 2.0;
        psi(6) = C * (F(0, 2) * 1.0 / std::cbrt(std::pow(F(0, 0) * F(1, 1) * F(2, 2) - F(0, 0) * F(1, 2) * F(2, 1) - F(0, 1) * F(1, 0) * F(2, 2) + F(0, 1) * F(1, 2) * F(2, 0) + F(0, 2) * F(1, 0) * F(2, 1) - F(0, 2) * F(1, 1) * F(2, 0), 2)) * 2.0 - (F(1, 0) * F(2, 1) - F(1, 1) * F(2, 0)) * 1.0 / std::cbrt(std::pow(F(0, 0) * F(1, 1) * F(2, 2) - F(0, 0) * F(1, 2) * F(2, 1) - F(0, 1) * F(1, 0) * F(2, 2) + F(0, 1) * F(1, 2) * F(2, 0) + F(0, 2) * F(1, 0) * F(2, 1) - F(0, 2) * F(1, 1) * F(2, 0), 5)) * (F(0, 0) * F(0, 0) + F(0, 1) * F(0, 1) + F(0, 2) * F(0, 2) + F(1, 0) * F(1, 0) + F(1, 1) * F(1, 1) + F(1, 2) * F(1, 2) + F(2, 0) * F(2, 0) + F(2, 1) * F(2, 1) + F(2, 2) * F(2, 2)) * (2.0 / 3.0)) - D * (F(1, 0) * F(2, 1) - F(1, 1) * F(2, 0)) * (-F(0, 0) * F(1, 1) * F(2, 2) + F(0, 0) * F(1, 2) * F(2, 1) + F(0, 1) * F(1, 0) * F(2, 2) - F(0, 1) * F(1, 2) * F(2, 0) - F(0, 2) * F(1, 0) * F(2, 1) + F(0, 2) * F(1, 1) * F(2, 0) + 1.0) * 2.0;
        psi(7) = C * (F(1, 2) * 1.0 / std::cbrt(std::pow(F(0, 0) * F(1, 1) * F(2, 2) - F(0, 0) * F(1, 2) * F(2, 1) - F(0, 1) * F(1, 0) * F(2, 2) + F(0, 1) * F(1, 2) * F(2, 0) + F(0, 2) * F(1, 0) * F(2, 1) - F(0, 2) * F(1, 1) * F(2, 0), 2)) * 2.0 + (F(0, 0) * F(2, 1) - F(0, 1) * F(2, 0)) * 1.0 / std::cbrt(std::pow(F(0, 0) * F(1, 1) * F(2, 2) - F(0, 0) * F(1, 2) * F(2, 1) - F(0, 1) * F(1, 0) * F(2, 2) + F(0, 1) * F(1, 2) * F(2, 0) + F(0, 2) * F(1, 0) * F(2, 1) - F(0, 2) * F(1, 1) * F(2, 0), 5)) * (F(0, 0) * F(0, 0) + F(0, 1) * F(0, 1) + F(0, 2) * F(0, 2) + F(1, 0) * F(1, 0) + F(1, 1) * F(1, 1) + F(1, 2) * F(1, 2) + F(2, 0) * F(2, 0) + F(2, 1) * F(2, 1) + F(2, 2) * F(2, 2)) * (2.0 / 3.0)) + D * (F(0, 0) * F(2, 1) - F(0, 1) * F(2, 0)) * (-F(0, 0) * F(1, 1) * F(2, 2) + F(0, 0) * F(1, 2) * F(2, 1) + F(0, 1) * F(1, 0) * F(2, 2) - F(0, 1) * F(1, 2) * F(2, 0) - F(0, 2) * F(1, 0) * F(2, 1) + F(0, 2) * F(1, 1) * F(2, 0) + 1.0) * 2.0;
        psi(8) = C * (F(2, 2) * 1.0 / std::cbrt(std::pow(F(0, 0) * F(1, 1) * F(2, 2) - F(0, 0) * F(1, 2) * F(2, 1) - F(0, 1) * F(1, 0) * F(2, 2) + F(0, 1) * F(1, 2) * F(2, 0) + F(0, 2) * F(1, 0) * F(2, 1) - F(0, 2) * F(1, 1) * F(2, 0), 2)) * 2.0 - (F(0, 0) * F(1, 1) - F(0, 1) * F(1, 0)) * 1.0 / std::cbrt(std::pow(F(0, 0) * F(1, 1) * F(2, 2) - F(0, 0) * F(1, 2) * F(2, 1) - F(0, 1) * F(1, 0) * F(2, 2) + F(0, 1) * F(1, 2) * F(2, 0) + F(0, 2) * F(1, 0) * F(2, 1) - F(0, 2) * F(1, 1) * F(2, 0), 5)) * (F(0, 0) * F(0, 0) + F(0, 1) * F(0, 1) + F(0, 2) * F(0, 2) + F(1, 0) * F(1, 0) + F(1, 1) * F(1, 1) + F(1, 2) * F(1, 2) + F(2, 0) * F(2, 0) + F(2, 1) * F(2, 1) + F(2, 2) * F(2, 2)) * (2.0 / 3.0)) - D * (F(0, 0) * F(1, 1) - F(0, 1) * F(1, 0)) * (-F(0, 0) * F(1, 1) * F(2, 2) + F(0, 0) * F(1, 2) * F(2, 1) + F(0, 1) * F(1, 0) * F(2, 2) - F(0, 1) * F(1, 2) * F(2, 0) - F(0, 2) * F(1, 0) * F(2, 1) + F(0, 2) * F(1, 1) * F(2, 0) + 1.0) * 2.0; */

    /*     double F1_1, F1_2, F1_3, F2_1, F2_2, F2_3, F3_1, F3_2, F3_3;
        F1_1, F1_2, F1_3, F2_1, F2_2, F2_3, F3_1, F3_2, F3_3 = F(0, 0), F(0, 1), F(0, 2), F(1, 0), F(1, 1), F(1, 2), F(2, 0), F(2, 1), F(2, 2);
        psi(0) = C * (F1_1 * 1.0 / pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1, 2.0 / 3.0) * 2.0 - (F2_2 * F3_3 - F2_3 * F3_2) * 1.0 / pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1, 5.0 / 3.0) * (F1_1 * F1_1 + F1_2 * F1_2 + F1_3 * F1_3 + F2_1 * F2_1 + F2_2 * F2_2 + F2_3 * F2_3 + F3_1 * F3_1 + F3_2 * F3_2 + F3_3 * F3_3) * (2.0 / 3.0)) - D * (F2_2 * F3_3 - F2_3 * F3_2) * (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0) * 2.0;
        psi(1) = C * (F2_1 * 1.0 / pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1, 2.0 / 3.0) * 2.0 + (F1_2 * F3_3 - F1_3 * F3_2) * 1.0 / pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1, 5.0 / 3.0) * (F1_1 * F1_1 + F1_2 * F1_2 + F1_3 * F1_3 + F2_1 * F2_1 + F2_2 * F2_2 + F2_3 * F2_3 + F3_1 * F3_1 + F3_2 * F3_2 + F3_3 * F3_3) * (2.0 / 3.0)) + D * (F1_2 * F3_3 - F1_3 * F3_2) * (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0) * 2.0;
        psi(2) = C * (F3_1 * 1.0 / pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1, 2.0 / 3.0) * 2.0 - (F1_2 * F2_3 - F1_3 * F2_2) * 1.0 / pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1, 5.0 / 3.0) * (F1_1 * F1_1 + F1_2 * F1_2 + F1_3 * F1_3 + F2_1 * F2_1 + F2_2 * F2_2 + F2_3 * F2_3 + F3_1 * F3_1 + F3_2 * F3_2 + F3_3 * F3_3) * (2.0 / 3.0)) - D * (F1_2 * F2_3 - F1_3 * F2_2) * (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0) * 2.0;
        psi(3) = C * (F1_2 * 1.0 / pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1, 2.0 / 3.0) * 2.0 + (F2_1 * F3_3 - F2_3 * F3_1) * 1.0 / pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1, 5.0 / 3.0) * (F1_1 * F1_1 + F1_2 * F1_2 + F1_3 * F1_3 + F2_1 * F2_1 + F2_2 * F2_2 + F2_3 * F2_3 + F3_1 * F3_1 + F3_2 * F3_2 + F3_3 * F3_3) * (2.0 / 3.0)) + D * (F2_1 * F3_3 - F2_3 * F3_1) * (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0) * 2.0;
        psi(4) = C * (F2_2 * 1.0 / pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1, 2.0 / 3.0) * 2.0 - (F1_1 * F3_3 - F1_3 * F3_1) * 1.0 / pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1, 5.0 / 3.0) * (F1_1 * F1_1 + F1_2 * F1_2 + F1_3 * F1_3 + F2_1 * F2_1 + F2_2 * F2_2 + F2_3 * F2_3 + F3_1 * F3_1 + F3_2 * F3_2 + F3_3 * F3_3) * (2.0 / 3.0)) - D * (F1_1 * F3_3 - F1_3 * F3_1) * (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0) * 2.0;
        psi(5) = C * (F3_2 * 1.0 / pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1, 2.0 / 3.0) * 2.0 + (F1_1 * F2_3 - F1_3 * F2_1) * 1.0 / pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1, 5.0 / 3.0) * (F1_1 * F1_1 + F1_2 * F1_2 + F1_3 * F1_3 + F2_1 * F2_1 + F2_2 * F2_2 + F2_3 * F2_3 + F3_1 * F3_1 + F3_2 * F3_2 + F3_3 * F3_3) * (2.0 / 3.0)) + D * (F1_1 * F2_3 - F1_3 * F2_1) * (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0) * 2.0;
        psi(6) = C * (F1_3 * 1.0 / pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1, 2.0 / 3.0) * 2.0 - (F2_1 * F3_2 - F2_2 * F3_1) * 1.0 / pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1, 5.0 / 3.0) * (F1_1 * F1_1 + F1_2 * F1_2 + F1_3 * F1_3 + F2_1 * F2_1 + F2_2 * F2_2 + F2_3 * F2_3 + F3_1 * F3_1 + F3_2 * F3_2 + F3_3 * F3_3) * (2.0 / 3.0)) - D * (F2_1 * F3_2 - F2_2 * F3_1) * (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0) * 2.0;
        psi(7) = C * (F2_3 * 1.0 / pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1, 2.0 / 3.0) * 2.0 + (F1_1 * F3_2 - F1_2 * F3_1) * 1.0 / pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1, 5.0 / 3.0) * (F1_1 * F1_1 + F1_2 * F1_2 + F1_3 * F1_3 + F2_1 * F2_1 + F2_2 * F2_2 + F2_3 * F2_3 + F3_1 * F3_1 + F3_2 * F3_2 + F3_3 * F3_3) * (2.0 / 3.0)) + D * (F1_1 * F3_2 - F1_2 * F3_1) * (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0) * 2.0;
        psi(8) = C * (F3_3 * 1.0 / pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1, 2.0 / 3.0) * 2.0 - (F1_1 * F2_2 - F1_2 * F2_1) * 1.0 / pow(F1_1 * F2_2 * F3_3 - F1_1 * F2_3 * F3_2 - F1_2 * F2_1 * F3_3 + F1_2 * F2_3 * F3_1 + F1_3 * F2_1 * F3_2 - F1_3 * F2_2 * F3_1, 5.0 / 3.0) * (F1_1 * F1_1 + F1_2 * F1_2 + F1_3 * F1_3 + F2_1 * F2_1 + F2_2 * F2_2 + F2_3 * F2_3 + F3_1 * F3_1 + F3_2 * F3_2 + F3_3 * F3_3) * (2.0 / 3.0)) - D * (F1_1 * F2_2 - F1_2 * F2_1) * (-F1_1 * F2_2 * F3_3 + F1_1 * F2_3 * F3_2 + F1_2 * F2_1 * F3_3 - F1_2 * F2_3 * F3_1 - F1_3 * F2_1 * F3_2 + F1_3 * F2_2 * F3_1 + 1.0) * 2.0; */
}